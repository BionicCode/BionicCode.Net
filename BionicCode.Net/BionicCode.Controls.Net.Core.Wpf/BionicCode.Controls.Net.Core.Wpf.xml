<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BionicCode.Controls.Net.Core.Wpf</name>
    </assembly>
    <members>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.AnalogClockFace.MeasureOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.AnalogClockFace.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.AnalogTimePicker.MeasureOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "T:BionicCode.Controls.Net.Core.Wpf.Controls.ClosableTabControl" -->
        <member name="T:BionicCode.Controls.Net.Core.Wpf.Controls.IMatchFormatter">
            <summary>
            Implement this interface to apply a custom highlight style for more complex scenarios e.g., code editors.
            </summary>
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.IMatchFormatter.FormatMatch(BionicCode.Controls.Net.Core.Wpf.Controls.MatchInfo,BionicCode.Controls.Net.Core.Wpf.Controls.HighlightArgs)">
            <summary>
            Executes when the <see cref="T:BionicCode.Controls.Net.Core.Wpf.Controls.HighlightRichTextBox"/> highlights found matches.
            </summary>
            <param name="matchInfo">A <see cref="T:BionicCode.Controls.Net.Core.Wpf.Controls.MatchInfo"/> that contains the match to give access to the actual <see cref="T:System.Windows.Documents.TextRange"/>.</param>
            <param name="args">A <see cref="T:BionicCode.Controls.Net.Core.Wpf.Controls.HighlightArgs"/> that holds the current configured highlight formatting attributes of the <see cref="T:BionicCode.Controls.Net.Core.Wpf.Controls.HighlightRichTextBox"/> and a reference to the actual <see cref="T:BionicCode.Controls.Net.Core.Wpf.Controls.HighlightRichTextBox"/>.</param>
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.DefaultMatchFormatter.FormatMatch(BionicCode.Controls.Net.Core.Wpf.Controls.MatchInfo,BionicCode.Controls.Net.Core.Wpf.Controls.HighlightArgs)">
            <inheritdoc />
        </member>
        <member name="T:BionicCode.Controls.Net.Core.Wpf.Controls.DelimiterPair">
            <summary>
            Describes a pair of opening and closing delimiters that encloses text to highlight on match.
            </summary>
        </member>
        <member name="T:BionicCode.Controls.Net.Core.Wpf.Controls.HighlightArgs">
            <summary>
            Holds formatting attributes that should be applied to the match results.
            </summary>
        </member>
        <member name="T:BionicCode.Controls.Net.Core.Wpf.Controls.MatchFoundEventArgs">
            <summary>
            Holds formatting attributes that should be applied to the match results.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BionicCode.Controls.Net.Core.Wpf.Controls.NormalizingNumericTextBox" -->
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.NormalizingNumericTextBox.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.NormalizingNumericTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.NormalizingNumericTextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.ScrollModeListBox.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Controls.ScrollModeListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Converters.DiameterToRadiusConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Converters.DiameterToRadiusConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Converters.SwitchIsCheckedToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Konvertiert einen Wert. 
            </summary>
            <returns>
            Ein konvertierter Wert.Wenn die Methode null zurückgibt, wird der gültige NULL-Wert verwendet.
            </returns>
            <param name="value">Der von der Bindungsquelle erzeugte Wert.</param><param name="targetType">Der Typ der Bindungsziel-Eigenschaft.</param><param name="parameter">Der zu verwendende Konverterparameter.</param><param name="culture">Die im Konverter zu verwendende Kultur.</param>
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Converters.SwitchIsCheckedToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Konvertiert einen Wert. 
            </summary>
            <returns>
            Ein konvertierter Wert.Wenn die Methode null zurückgibt, wird der gültige NULL-Wert verwendet.
            </returns>
            <param name="value">Der Wert, der vom Bindungsziel erzeugt wird.</param><param name="targetType">Der Typ, in den konvertiert werden soll.</param><param name="parameter">Der zu verwendende Konverterparameter.</param><param name="culture">Die im Konverter zu verwendende Kultur.</param>
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Converters.SwitchWidthToTotalWidthConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Konvertiert einen Wert. 
            </summary>
            <returns>
            Ein konvertierter Wert.Wenn die Methode null zurückgibt, wird der gültige NULL-Wert verwendet.
            </returns>
            <param name="widthParameters">Der von der Bindungsquelle erzeugte Wert.</param><param name="targetType">Der Typ der Bindungsziel-Eigenschaft.</param><param name="labelWidthParameter">Der zu verwendende Konverterparameter.</param><param name="culture">Die im Konverter zu verwendende Kultur.</param>
        </member>
        <member name="T:BionicCode.Controls.Net.Core.Wpf.Resources.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BionicCode.Controls.Net.Core.Wpf.Resources.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BionicCode.Controls.Net.Core.Wpf.Resources.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BionicCode.Controls.Net.Core.Wpf.Resources.Resources.SwitchStateToggled">
            <summary>
              Looks up a localized string similar to On.
            </summary>
        </member>
        <member name="P:BionicCode.Controls.Net.Core.Wpf.Resources.Resources.SwitchStateUntoggled">
            <summary>
              Looks up a localized string similar to Off.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BionicCode.Controls.Net.Core.Wpf.TimePicker" -->
        <member name="M:BionicCode.Controls.Net.Core.Wpf.TimeTextBox.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.TimeTextBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:BionicCode.Controls.Net.Core.Wpf.Unit.ToString">
            <inheritdoc />
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
