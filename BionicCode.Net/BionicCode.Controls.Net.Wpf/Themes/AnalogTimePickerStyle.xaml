<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:BionicCode.Controls.Net.Wpf"
                    xmlns:converter="clr-namespace:BionicCode.Utilities.Net.Wpf.Converter;assembly=BionicCode.Utilities.Net.Wpf"
                    xmlns:attachedBehaviors="clr-namespace:BionicCode.Utilities.Net.Wpf.AttachedBehaviors;assembly=BionicCode.Utilities.Net.Wpf">
  <ResourceDictionary.MergedDictionaries>
    <!--<ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Resources/Styles/ScrolBarStyle.xaml" />-->
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Resources/Colors.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Resources/Styles/SeparatorBorderStyles.xaml" />
    <ResourceDictionary
      Source="/BionicCode.Controls.Net.Wpf;component/Resources/Styles/FlipSwitchToggleButtonStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />


  <ControlTemplate x:Key="ComboBoxToggleButton"
                   TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ColorAnimationUsingKeyFrames
                Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)"
                Storyboard.TargetName="Border">
                <EasingColorKeyFrame KeyTime="0"
                                     Value="LightGray" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames
                Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                Storyboard.TargetName="Arrow">
                <EasingColorKeyFrame KeyTime="0"
                                     Value="{StaticResource DisabledForegroundColor}" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames
                Storyboard.TargetProperty="(Border.BorderBrush).
                (SolidColorBrush.Color)"
                Storyboard.TargetName="Border">
                <EasingColorKeyFrame KeyTime="0"
                                     Value="{StaticResource DisabledForegroundColor}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked" />
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Indeterminate" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Border"
              Grid.ColumnSpan="2"
              CornerRadius="2"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="1" Background="{TemplateBinding Background}">
      </Border>
      <Border Grid.Column="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              CornerRadius="2,0,0,2"
              Margin="1" Background="{TemplateBinding Background}">
      </Border>
      <Path x:Name="Arrow"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 4 4 L 8 0 Z">
        <Path.Fill>
          <SolidColorBrush Color="AntiqueWhite" />
        </Path.Fill>
      </Path>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTextBox"
                   TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost"
            Focusable="False"
            Background="Transparent" />
  </ControlTemplate>


  <Style x:Key="ListBoxItemStyle"
         TargetType="{x:Type ListBoxItem}">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border x:Name="Border"
                  Padding="2"
                  SnapsToDevicePixels="true"
                  Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource HighLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource HighLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MeridiemComboBoxStyle" TargetType="ComboBox">
    <Setter Property="Width" Value="64" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="BorderThickness" Value="0" />
    <!--<Setter Property="Background" Value="{StaticResource ControlBrush}" />
    <Setter Property="Foreground" Value="{StaticResource TextBrush}" />-->
    <Setter Property="attachedBehaviors:Selector.IsInfiniteScrollEnabled" Value="True" />
    <Setter Property="attachedBehaviors:Selector.IsSelectOnScrollEnabled" Value="True" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Disabled" />
    <Setter Property="ScrollViewer.CanContentScroll"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                  Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledForegroundColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditStates">
                <VisualState x:Name="Editable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="PART_EditableTextBox">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                      Storyboard.TargetName="ContentSite">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Uneditable" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ToggleButton"
                          Background="{TemplateBinding Background}"
                          Foreground="{TemplateBinding Foreground}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Template="{StaticResource ComboBoxToggleButton}"
                          Focusable="false"
                          ClickMode="Press"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter x:Name="ContentSite"
                              IsHitTestVisible="False"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Margin="3,3,23,3"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center">
            </ContentPresenter>
            <TextBox x:Name="PART_EditableTextBox"
                     Style="{x:Null}"
                     Template="{StaticResource ComboBoxTextBox}"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom"
                     Margin="3,3,23,3"
                     Focusable="True"
                     Background="Transparent"
                     Visibility="Hidden"
                     IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup x:Name="Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide">
              <Grid x:Name="DropDown"
                    SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="DropDownBorder"
                        BorderThickness="1">
                  <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                  </Border.BorderBrush>
                  <Border.Background>
                    <SolidColorBrush Color="{StaticResource ControlBackgroundColor}" />
                  </Border.Background>
                </Border>
                <ScrollViewer Margin="4,6,4,6"
                              SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True"
                              KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
              <Setter TargetName="DropDownBorder"
                      Property="MinHeight"
                      Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="true">
              <Setter Property="ScrollViewer.CanContentScroll"
                      Value="false" />
            </Trigger>
            <Trigger SourceName="Popup"
                     Property="AllowsTransparency"
                     Value="true">
              <Setter TargetName="DropDownBorder"
                      Property="CornerRadius"
                      Value="4" />
              <Setter TargetName="DropDownBorder"
                      Property="Margin"
                      Value="0,2,0,0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="wpf:AnalogTimePicker">
    <Setter Property="ClockDiameter" Value="400" />
    <Setter Property="AnalogClockFace">
      <Setter.Value>
        <wpf:AnalogClockFace x:Name="AnalogClockFace"
                               IsTimePickerModeEnabled="True"
                               Is24HModeEnabled="True" 
                               Background="{Binding RelativeSource={RelativeSource AncestorType=wpf:AnalogTimePicker}, Path=Background}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:AnalogTimePicker}">
          <StackPanel>

            <!--<VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="PanelStates">
                <VisualStateGroup.States>
                  <VisualState Name="{x:Static clock:AnalogTimePicker.VisualStatePickerOpen}">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PickerPanel"
                                       Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" From="0" To="1"
                                       Duration="0:0:0.1"/>
                      <DoubleAnimation Storyboard.TargetName="PickerPanel"
                                       Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" From="0" To="1"
                                       Duration="0:0:0.1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="{x:Static clock:AnalogTimePicker.VisualStatePickerClosed}">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PickerPanel"
                                       Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" From="1" To="0"
                                       Duration="0:0:0.1"/>
                      <DoubleAnimation Storyboard.TargetName="PickerPanel"
                                       Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" From="1" To="0"
                                       Duration="0:0:0.1"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup.States>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="DisplayLabel"
                           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTimeText}"
                           FontSize="12"
                           VerticalAlignment="Stretch"
                           Width="70" />
                <ToggleButton x:Name="Expander"
                              Content="Change"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen}"
                              Margin="8,0"
                              FontSize="10"
                              Foreground="DodgerBlue">
                  <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                      <TextBlock x:Name="Link"
                                 Text="{TemplateBinding Content}"
                                 VerticalAlignment="Center" />

                      <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter TargetName="Link" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </ToggleButton.Template>
                </ToggleButton>
              </StackPanel>
            </Border>
            <Popup x:Name="PickerPanel"
                   Height="{TemplateBinding ClockDiameter}"
                   PlacementTarget="{Binding ElementName=Expander}"
                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen}"
                   StaysOpen="False"
                   AllowsTransparency="True">
              <!--<Popup.RenderTransform>
                <ScaleTransform x:Name="PopupScaleTransform"/>
              </Popup.RenderTransform>-->
              <Border BorderThickness="1"
                      BorderBrush="DimGray"
                      Background="{TemplateBinding Background}"
                      Margin="8"
                      Padding="8">
                <Border.Effect>
                  <DropShadowEffect Opacity="0.7" Color="Black" />
                </Border.Effect>
                <DockPanel LastChildFill="True">
                  <StackPanel x:Name="OverflowPanel"  
                              DockPanel.Dock="Top"
                              HorizontalAlignment="Center"
                              Orientation="Horizontal"
                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOverflowEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="8,0">
                    <TextBlock Text="Days" VerticalAlignment="Center" />
                    <ComboBox x:Name="PART_OverflowPicker"
                              ItemsSource="{TemplateBinding SelectableDays}"
                              SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedDays}"
                              Style="{StaticResource MeridiemComboBoxStyle}"
                              VerticalAlignment="Center"
                              Background="{TemplateBinding Background}"
                              BorderBrush="Transparent"
                              Foreground="{TemplateBinding Foreground}"
                              BorderThickness="1"
                              FontSize="20" />
                  </StackPanel>

                  <StackPanel Orientation="Horizontal"
                              DockPanel.Dock="Top"
                              HorizontalAlignment="Center"
                              Margin="0,0,0,8">
                    <TextBlock x:Name="PART_HourDisplay"
                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AnalogClockFace.SelectedHour, StringFormat={}{0:00}}"
                               FontSize="44"
                               FontStretch="UltraExpanded"
                               FontWeight="UltraLight"
                               Width="45"/>

                    <TextBlock Text=":"
                               FontSize="44"
                               FontStretch="UltraExpanded"
                               FontWeight="UltraLight" />

                    <TextBlock x:Name="PART_MinuteDisplay"
                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AnalogClockFace.SelectedMinute, StringFormat={}{0:00}}"
                               FontSize="44"
                               FontStretch="UltraExpanded"
                               FontWeight="UltraLight"
                               Width="45" />

                    <TextBlock Text=":"
                               FontSize="44"
                               FontStretch="UltraExpanded"
                               FontWeight="UltraLight" />

                    <TextBlock x:Name="PART_SecondDisplay"
                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AnalogClockFace.SelectedSecond, StringFormat={}{0:00}}"
                               FontSize="44"
                               FontStretch="UltraExpanded"
                               FontWeight="UltraLight"
                               Width="45" />
                  </StackPanel>
                  <ContentPresenter Content="{TemplateBinding AnalogClockFace}" />
                </DockPanel>
              </Border>
            </Popup>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>