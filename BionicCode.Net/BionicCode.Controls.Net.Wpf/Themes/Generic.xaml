<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:wpf="clr-namespace:BionicCode.Controls.Net.Wpf"
    xmlns:bionicCharts="clr-namespace:BionicCode.Controls.Net.Wpf.BionicCharts">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Resources/Icons.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/TimePickerStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/AnalogTimePickerStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/AnalogClockFaceStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/DisplayDigitStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/ClockFaceStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/ClockStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/BionicSwipePageStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/FrameHeaderStyle.xaml" />
    <ResourceDictionary Source="/BionicCode.Controls.Net.Wpf;component/Themes/BionicSwipePageFrameStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

  <Color x:Key="DarkColor">#FF252526</Color>
  <Color x:Key="SelectedDateColor">DodgerBlue</Color>
  <Color x:Key="TodayHighlightColor">OrangeRed</Color>
  <Color x:Key="EventItemBackgroundColor">#C99752</Color>
  <Color x:Key="EventItemGripColor">#BA7413</Color>
  <Color x:Key="EventItemHighlightBorderColor">#FF9400</Color>
  <Color x:Key="EventItemBorderColor">Transparent</Color>
  <Color x:Key="DateItemBackgroundColor">Transparent</Color>
  <Color x:Key="DateItemBorderColor">Transparent</Color>
  <Color x:Key="DateColumnHeaderItemBackgroundColor">#FF252526</Color>
  <Color x:Key="DateColumnHeaderItemBorderColor">#00464444</Color>

  <SolidColorBrush x:Key="DarkBrush"
                   Color="{StaticResource DarkColor}" />
  <SolidColorBrush x:Key="SelectedDateBrush"
                   Opacity="0.6"
                   Color="{StaticResource SelectedDateColor}" />
  <SolidColorBrush x:Key="TodayHighlightBrush"
                   Color="{StaticResource TodayHighlightColor}" />
  <SolidColorBrush x:Key="DateItemBackgroundBrush"
                   Color="{StaticResource DateItemBackgroundColor}" />
  <SolidColorBrush x:Key="DateItemBorderBrush"
                   Color="{StaticResource DateItemBorderColor}" />
  <SolidColorBrush x:Key="EventItemBackgroundBrush"
                   Color="{StaticResource EventItemBackgroundColor}" />
  <SolidColorBrush x:Key="EventItemGripBrush"
                   Color="{StaticResource EventItemGripColor}" />
  <SolidColorBrush x:Key="EventItemBorderBrush"
                   Color="{StaticResource EventItemBorderColor}" />
  <SolidColorBrush x:Key="EventItemHighlightBorderBrush"
                   Color="{StaticResource EventItemHighlightBorderColor}" />
  <SolidColorBrush x:Key="DateColumnHeaderItemBackgroundBrush"
                   Color="{StaticResource DateColumnHeaderItemBackgroundColor}" Opacity="0.4" />
  <SolidColorBrush x:Key="DateColumnHeaderItemBorderBrush"
                   Color="{StaticResource DateColumnHeaderItemBorderColor}" />

  <Thickness x:Key="DateItemBorderThickness">0</Thickness>

  <Style x:Key="{x:Type wpf:CalendarPanel}"
         TargetType="{x:Type wpf:CalendarPanel}" />

  <Style TargetType="wpf:CalendarEventItem">
    <!--<Setter Property="BorderThickness" Value="3" />-->
    <Setter Property="BorderBrush"
            Value="{StaticResource EventItemBorderBrush}" />
    <Setter Property="Background"
            Value="{StaticResource EventItemBackgroundBrush}" />
    <Setter Property="wpf:Calendar.Day"
            Value="{Binding Start}" />
    <Setter Property="Padding"
            Value="0,0,8,0" />
    <Setter Property="Margin"
            Value="0,0,0,1" />
    <Setter Property="Height"
            Value="16" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="VerticalAlignment"
            Value="Top" />
    <Setter Property="VerticalContentAlignment"
            Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="wpf:CalendarEventItem">
          <Border>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border x:Name="ResizeGripLeft"
                      Grid.Column="0"
                      Visibility="Visible"
                      Width="8"
                      Background="{StaticResource EventItemGripBrush}"
                      Cursor="{x:Static Cursors.SizeWE}" />
              <Border Grid.Column="1"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Border x:Name="ResizeGripRight"
                      Grid.Column="2"
                      Margin="{TemplateBinding Padding}"
                      Width="1"
                      Background="{StaticResource EventItemGripBrush}"
                      Cursor="{x:Static Cursors.SizeWE}" />
            </Grid>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{StaticResource EventItemBackgroundBrush}" />
              <Setter Property="Background"
                      Value="{StaticResource EventItemHighlightBorderBrush}" />
            </Trigger>
            <Trigger Property="IsSpanningSource"
                     Value="True">
              <Setter Property="Padding"
                      Value="0" />
            </Trigger>
            <Trigger Property="IsSpanningTarget"
                     Value="True">
              <Setter TargetName="ResizeGripLeft"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style TargetType="bionicCalendar:CalendarRowItem">
    <Setter Property="Background" Value="LightGreen" />
    <Setter Property="BorderThickness" Value="{StaticResource DateItemBorderThickness}" />
    <Setter Property="BorderBrush" Value="{StaticResource DateItemBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="bionicCalendar:CalendarRowItem">
          <Border x:Name="Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}">
            <Grid x:Name="PART_RowItemsHost" Background="Transparent">
              <Border x:Name="PART_SelectionBorder" Background="CadetBlue" />
            </Grid>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="PART_SelectionBorder" Property="Background" Value="DarkGray" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    -->
  <!--<Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="DarkGray" />
      </Trigger>
    </Style.Triggers>-->
  <!--
  </Style>-->


  <Style TargetType="wpf:CalendarDateItem">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="BorderThickness"
            Value="{StaticResource DateItemBorderThickness}" />
    <Setter Property="BorderBrush"
            Value="{StaticResource DateItemBorderBrush}" />
    <Setter Property="IsToday" Value="{Binding IsToday}" />
    <Setter Property="IsSelected"
            Value="{Binding IsSelected}" />
    <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
    <Setter Property="VerticalContentAlignment"
            Value="Top" />
    <Setter Property="VerticalAlignment"
            Value="Stretch" />
    <!--<Setter Property="Height" Value="64" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="wpf:CalendarDateItem">
          <Border x:Name="Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}">

            <Grid>
              <Border x:Name="ClickableBackground"
                      Grid.Row="0"
                      Grid.Column="0"
                      IsHitTestVisible="True"
                      Background="Transparent"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch" />
              <Border x:Name="SelectionBorder"
                      Grid.Row="0"
                      Grid.Column="0"
                      Visibility="Collapsed"
                      Background="{StaticResource SelectedDateBrush}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="0,0,0,0" />
              <Border x:Name="TodayMarker"
                      Grid.Row="0"
                      Grid.Column="0"
                      Visibility="Collapsed"
                      Background="{StaticResource TodayHighlightBrush}"
                      HorizontalAlignment="Stretch"
                      Height="32"
                      VerticalAlignment="Top" />
              <ContentPresenter Grid.Row="0"
                                Grid.Column="0"
                                Height="32"
                                Margin="0,0,0,0"
                                ContentSource="Header"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsToday"
                     Value="True">
              <Setter TargetName="TodayMarker"
                      Property="Visibility"
                      Value="Visible" />
              <!--<Setter TargetName="SelectionBorder" Property="Margin" Value="0,8,0,0" />-->
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
              <Setter TargetName="SelectionBorder"
                      Property="Visibility"
                      Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>


  </Style>

  <DataTemplate x:Key="DefaultCalendarEventItemTemplate"
                DataType="{x:Type wpf:CalendarEvent}">
    <TextBlock Margin="4,0"
               Text="{Binding Summary}"
               VerticalAlignment="Center"
               HorizontalAlignment="Stretch"
               FontSize="10"
               Foreground="{StaticResource DarkBrush}"
               TextTrimming="CharacterEllipsis" />
  </DataTemplate>

  <DataTemplate x:Key="{x:Static wpf:CalendarPanel.DefaultCalendarDateItemTemplateKey}"
                DataType="{x:Type wpf:CalendarDate}">
    <Grid Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <TextBlock Text="{Binding Day.Day}"
                 VerticalAlignment="Top"
                 FontSize="14"
                 Margin="8,4,0,0"
                 FontStretch="UltraExpanded"
                 FontWeight="UltraLight" />
      <TextBlock Grid.Column="1"
                 Margin="8,8,0,0"
                 Text="{Binding Annotation}"
                 FontSize="9"
                 TextTrimming="CharacterEllipsis"
                 VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>

  <Style TargetType="wpf:CalendarDateColumnHeaderItem">
    <Setter Property="Background"
            Value="{StaticResource DateColumnHeaderItemBackgroundBrush}" />
    <Setter Property="BorderThickness"
            Value="{StaticResource DateItemBorderThickness}" />
    <Setter Property="BorderBrush"
            Value="{StaticResource DateColumnHeaderItemBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="wpf:CalendarDateColumnHeaderItem">
          <Border x:Name="Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}">
            <TextBlock Margin="8,0,0,0"
                       Text="{Binding}"
                       FontSize="14"
                       FontStretch="UltraExpanded"
                       FontWeight="UltraLight"
                       VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="wpf:WeekHeaderItem">
    <Setter Property="Foreground"
            Value="#FF252526" />
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Color="DarkGray"
                         Opacity="0.2" />
      </Setter.Value>
    </Setter>
    <Setter Property="LayoutTransform">
      <Setter.Value>
        <RotateTransform Angle="-90" />
      </Setter.Value>
    </Setter>
    <Setter Property="FontStretch"
            Value="ExtraExpanded" />
    <Setter Property="FontWeight"
            Value="UltraLight" />
    <Setter Property="Padding"
            Value="0,4" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="wpf:WeekHeaderItem">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NavigationButtonStyle" TargetType="Button">
    <Setter Property="Width" Value="24" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter />

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type wpf:Calendar}">
    <Setter Property="IsTitleVisible" Value="True" />
    <Setter Property="IsNavigationBarVisible" Value="True" />
    <Setter Property="Background"
            Value="#FF343434" />
    <Setter Property="Foreground"
            Value="AntiqueWhite" />
    <!--<Setter Property="DateHeaderItemTemplate"
            Value="{DynamicResource {ComponentResourceKey {x:Type bionicCalendar:CalendarPanel}, {x:Static bionicCalendar:CalendarPanel.DefaultCalendarDateItemTemplateName}}}" />-->
    <Setter Property="ItemTemplate"
            Value="{StaticResource DefaultCalendarEventItemTemplate}" />
    <Setter Property="DateColumnHeaderItemContainerStyle"
            Value="{StaticResource {x:Type wpf:CalendarDateColumnHeaderItem}}" />
    <!--<Setter Property="UseLayoutRounding"
            Value="True" />-->
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <wpf:CalendarPanel GridColor="Black"
                             GridThickness="0.2"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:Calendar}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CalendarView">
                <VisualStateGroup.States>
                  <VisualState Name="Normal" />
                  <VisualState Name="ReplacingView">
                    <!--<VisualState.Storyboard>
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="PART_ScrollHost" 
                                         Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" 
                                         BeginTime="0:0:0"
                                         Duration="0:0:0.2"
                                         From="{Binding Path=(wpf:Calendar.TransitionAnimationStart)}"
                                         To="{Binding Path=(wpf:Calendar.TransitionAnimationStop)}" 
                                         FillBehavior="HoldEnd"/>
                      </Storyboard>
                    </VisualState.Storyboard>-->
                  </VisualState>
                  <VisualState Name="ReplacedView">
                    <VisualState.Storyboard>
                      <Storyboard Duration="0:0:0.2">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ScrollHostContentImage"
                                                       Storyboard.TargetProperty="Visibility"
                                                       BeginTime="0:0:0"
                                                       Duration="0:0:0.2">
                          <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                  Value="{x:Static Visibility.Visible}" />
                          <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                                  Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="PART_ScrollHost"
                                         Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                         BeginTime="0:0:0"
                                         Duration="0:0:0.1"
                                         From="500"
                                         To="0"  />
                      </Storyboard>
                    </VisualState.Storyboard>
                  </VisualState>
                </VisualStateGroup.States>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>

              <TextBlock Grid.Row="0"
                         Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTitleVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CurrentMonthView.DisplayName}"
                         HorizontalAlignment="Center"
                         FontSize="24"
                         FontStretch="UltraExpanded"
                         FontWeight="UltraLight"
                         Margin="0,8" />

              <StackPanel Grid.Row="0" Grid.Column="0"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsNavigationBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Orientation="Horizontal" 
                          HorizontalAlignment="Right"
                          Margin="16,0">
                <Button Content="{StaticResource ChevronLeftIcon}"
                        ToolTip="Go to previous month"
                        Command="{x:Static wpf:Calendar.SelectPreviousMonthViewRoutedCommand}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource NavigationButtonStyle}"
                        Margin="0,0,8,0" />
                <Button Content="{StaticResource GotoTodayIcon}"
                        ToolTip="Go to today"
                        Command="{x:Static wpf:Calendar.SelectTodayMonthViewRoutedCommand}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource NavigationButtonStyle}"
                        Margin="0,0,8,0" />
                <Button Content="{StaticResource ChevronRightIcon}"
                        ToolTip="Go to next month"
                        Command="{x:Static wpf:Calendar.SelectNextMonthViewRoutedCommand}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource NavigationButtonStyle}" />
              </StackPanel>

              <Rectangle x:Name="PART_ScrollHostContentImage" Grid.Row="1" Visibility="Collapsed">
                <Rectangle.Fill>
                  <VisualBrush Visual="{Binding ElementName=PART_ScrollHost}" />
                </Rectangle.Fill>
              </Rectangle>

              <ScrollViewer x:Name="PART_ScrollHost"
                            Grid.Row="1"
                            Visibility="Visible">
                <ItemsPresenter />
              </ScrollViewer>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="wpf:NormalizingNumericTextBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="DarkGray" />
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="wpf:NormalizingNumericTextBox">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Margin="0" />
              <ComboBox x:Name="PART_UnitsItemsHost" Grid.Column="1" BorderThickness="0" HorizontalAlignment="Right" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type wpf:ClosableTabControl}"
         BasedOn="{StaticResource {x:Type TabControl}}">
    <Setter Property="Background"
            Value="{x:Static SystemColors.ControlBrush}" />
    <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ClosableTabControl}">
                      <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
            </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Panel.ZIndex="1"
                                  Margin="0,0,4,-1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
            <Border Grid.Row="1" Background="Red"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

              <ContentPresenter x:Name="PART_SelectedContentHost" />
                    </Border>
              </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
          <Setter Property="BorderThickness"
                  Value="1,1,1,0" />
          <Setter Property="Margin"
                  Value="0,2,0,0" />
          <Setter Property="BorderBrush" Value="DimGray" />
          <Setter Property="Background" Value="LightGray" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="TabItem">
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                  <StackPanel Orientation="Horizontal">
                    <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="12,2,12,2"
                                      RecognizesAccessKey="True" />
                    <Button Content="X"
                            Command="{x:Static wpf:ClosableTabControl.CloseTabRoutedCommand}"
                            Height="16"
                            Width="16"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Margin="4" />
                  </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background"
                            Value="{x:Static SystemColors.ControlBrush}" />
                    <Setter Property="Panel.ZIndex"
                            Value="100" />
                    <Setter Property="Margin"
                            Value="0,0,0,-1" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>



  <Style TargetType="{x:Type bionicCharts:Chart}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type bionicCharts:CartesianChart}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="scv">
              <bionicCharts:ChartPanelPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--<Style TargetType="{x:Type bionicCharts:CartesianChart}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type bionicCharts:CartesianChart}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer CanContentScroll="True"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto">
              <bionicCharts:ChartPanelPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

  <Style TargetType="{x:Type bionicCharts:CartesianChartItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type bionicCharts:CartesianChartItem}">
          <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
