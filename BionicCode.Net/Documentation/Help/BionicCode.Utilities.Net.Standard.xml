<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>BionicCode.Utilities.Net.Standard</name>
  </assembly>
  <members>
    <member name="T:BionicCode.Utilities.Net.Standard.ArgumentsValidator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ArgumentsValidator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ArgumentsValidator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.ArgumentsValidator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ArgumentsValidator.ArgsAreNull(System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ArgumentsValidator.ArgsAreNull(System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="argsToValidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>argsToValidate</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ArgumentsValidator.ArgsAreNull(System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ArgumentsValidator.ArgsAreNull(System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.EventAggregator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.EventAggregator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.EventAggregator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventNames">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventNames</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String,System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="removeObserversOfEvents">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>removeObserversOfEvents</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventNames">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventNames</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="removeEventObservers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>removeEventObservers</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.EventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.IEventAggregator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.IEventAggregator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventNames">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventNames</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObservable(System.Object,System.Collections.Generic.IEnumerable{System.String})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRegisterObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String,System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.String,System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveAllObservers(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver(System.String,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveGlobalObserver``1(System.String,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="removeEventObservers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>removeEventObservers</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventSource">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSource</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventNames">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventNames</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="removeEventObservers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>removeEventObservers</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObservable(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver(System.String,System.Type,System.Delegate)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="eventName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventSourceType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventSourceType</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="eventHandler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventHandler</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TEventArgs">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TEventArgs</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IEventAggregator.TryRemoveObserver``1(System.String,System.Type,System.EventHandler{``0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.INullObject">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.INullObject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.INullObject.IsNull">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.INullObject.IsNull</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.IValueInverter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.IValueInverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IValueInverter.InvertValue(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.InvertValue(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.InvertValue(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.InvertValue(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IValueInverter.TryInvertValue(System.Object,System.Object@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.TryInvertValue(System.Object,System.Object@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.TryInvertValue(System.Object,System.Object@)</parameter>
          </include>
        </markup>
      </param>
      <param name="invertedValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invertedValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.TryInvertValue(System.Object,System.Object@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IValueInverter.TryInvertValue(System.Object,System.Object@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TKey</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2</parameter>
          </include>
        </markup>
      </typeparam>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.#ctor(System.Boolean,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2</parameter>
          </include>
        </markup>
      </summary>
      <param name="isReadOnly">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isReadOnly</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.#ctor(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="isAutoPurgeFinalizedItemsEnabled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isAutoPurgeFinalizedItemsEnabled</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.#ctor(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(`0,`1)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(`0,`1)</parameter>
          </include>
        </markup>
      </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(`0,`1)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Add(`0,`1)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Clear">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Clear</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.ContainsKey(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.ContainsKey(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.ContainsKey(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.ContainsKey(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="arrayIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>arrayIndex</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Count">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Count</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.GetEnumerator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.GetEnumerator</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.GetEnumerator</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.IsAutoPurgeFinalizedItemsEnabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.IsAutoPurgeFinalizedItemsEnabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.IsReadOnly">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.IsReadOnly</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Item(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Item(`0)</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Keys">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Keys</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Remove(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.RemoveTarget(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.RemoveTarget(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.RemoveTarget(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.RemoveTarget(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.System#Collections#IEnumerable#GetEnumerator</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.System#Collections#IEnumerable#GetEnumerator</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(System.Object,`1@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(System.Object,`1@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(System.Object,`1@)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(System.Object,`1@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(System.Object,`1@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(`0,`1@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(`0,`1@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(`0,`1@)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(`0,`1@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.TryGetValue(`0,`1@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Values">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Collections.Generic.WeakReferenceKeyDictionary`2.Values</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Exception.WrongEventHandlerSignatureException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="thisCollection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thisCollection</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})</parameter>
          </include>
        </markup>
      </param>
      <param name="range">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>range</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TItem">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TItem</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})</parameter>
          </include>
        </markup>
      </summary>
      <param name="thisCollection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thisCollection</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})</parameter>
          </include>
        </markup>
      </param>
      <param name="range">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>range</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TKey</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})</parameter>
          </include>
        </markup>
      </typeparam>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.HasReachedEnd(System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.HasReachedEnd(System.IO.Stream)</parameter>
          </include>
        </markup>
      </summary>
      <param name="streamToCheck">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>streamToCheck</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.HasReachedEnd(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Extensions.HelperExtensions.HasReachedEnd(System.IO.Stream)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Generic.IFactory`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.IFactory`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TCreate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TCreate</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.IFactory`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create(System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create(System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create(System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.IFactory`1.Create(System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Generic.INullObject`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.INullObject`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TObject">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TObject</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.INullObject`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.INullObject`1.NullObject">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.INullObject`1.NullObject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Generic.NullObject`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.NullObject`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TObject">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TObject</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.NullObject`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.#ctor(BionicCode.Utilities.Net.Standard.Generic.IFactory{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Generic.NullObject`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="nullInstanceFactory">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nullInstanceFactory</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.#ctor(BionicCode.Utilities.Net.Standard.Generic.IFactory{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.#ctor(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Generic.NullObject`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="isNull">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isNull</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.#ctor(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.IsNull">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.IsNull</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.NullInstance">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.NullInstance</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.NullInstanceFactory">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.NullObject`1.NullInstanceFactory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.#ctor(`0,`0)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="newValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
      </param>
      <param name="oldValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.NewValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.NewValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.OldValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.ValueChangedEventArgs`1.OldValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1.#ctor(`0)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1.#ctor(`0)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.Generic.ValueEventArgs`1.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.IO.FileExtensions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.IO.FileExtensions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.IO.FilePathFilter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.IO.FilePathFilter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.IO.FilePathFilter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectAllFilePathsIgnoreFileExtension(System.String,System.IO.SearchOption)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectAllFilePathsIgnoreFileExtension(System.String,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </summary>
      <param name="folderPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>folderPath</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectAllFilePathsIgnoreFileExtension(System.String,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </param>
      <param name="directorySearchOption">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directorySearchOption</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectAllFilePathsIgnoreFileExtension(System.String,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectAllFilePathsIgnoreFileExtension(System.String,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </summary>
      <param name="folderPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>folderPath</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </param>
      <param name="directorySearchOption">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directorySearchOption</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.CollectFilePathsFromFolderByFileExtension(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.IO.SearchOption)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </summary>
      <param name="pathEntries">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pathEntries</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="pathEntries">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pathEntries</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="isIncludingSubdirectories">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isIncludingSubdirectories</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="folderPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>folderPath</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="isIncludingSubdirectories">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isIncludingSubdirectories</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.FilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </summary>
      <param name="pathEntries">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pathEntries</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIgnoringFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="pathEntries">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pathEntries</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="isIncludingSubdirectories">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isIncludingSubdirectories</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesIncludingFolders(System.Collections.Generic.IEnumerable{System.String},BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="folderPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>folderPath</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileExtensionsToCollect">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileExtensionsToCollect</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="isIncludingSubdirectories">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isIncludingSubdirectories</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.IO.IFilePathFilter.EnumerateFilesInFolder(System.String,BionicCode.Utilities.Net.Standard.IO.FileExtensions,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.GetPropertyErrors(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyHasError(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyValueChanged">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:BionicCode.Utilities.Net.Standard.ViewModel.IViewModel.PropertyValueChanged</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.#ctor(System.String,`0,`0)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.#ctor(System.String,`0,`0)</parameter>
          </include>
        </markup>
      </param>
      <param name="oldValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.#ctor(System.String,`0,`0)</parameter>
          </include>
        </markup>
      </param>
      <param name="newValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.#ctor(System.String,`0,`0)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.NewValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.NewValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.OldValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.OldValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.PropertyName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedArgs`1.PropertyName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedEventHandler`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedEventHandler`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.PropertyValueChangedEventHandler`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="T:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BionicCode.Utilities.Net.Standard.ViewModel.ViewModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.ErrorsChanged">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.ErrorsChanged</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetErrors(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetErrors(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetErrors(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetErrors(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetPropertyErrors(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.GetPropertyErrors(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.HasErrors">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.HasErrors</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="validationDelegate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validationDelegate</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.IsValueValid``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnErrorsChanged(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnErrorsChanged(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnErrorsChanged(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnPropertyChanged(System.String,System.Object,System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnPropertyChanged(System.String,System.Object,System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnPropertyChanged(System.String,System.Object,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="oldValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnPropertyChanged(System.String,System.Object,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="newValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.OnPropertyChanged(System.String,System.Object,System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyChanged">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyChanged</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyHasError(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyHasError(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyValueChanged">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.PropertyValueChanged</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="validationDelegate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validationDelegate</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetBackingField">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetBackingField</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="isRejectInvalidValueEnabled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isRejectInvalidValueEnabled</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="isThrowExceptionOnValidationErrorEnabled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isThrowExceptionOnValidationErrorEnabled</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetBackingField">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetBackingField</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValue``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="validationDelegate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validationDelegate</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetBackingField">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetBackingField</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="isRejectInvalidValueEnabled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isRejectInvalidValueEnabled</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="isThrowExceptionOnValidationErrorEnabled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isThrowExceptionOnValidationErrorEnabled</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,System.Func{``0,System.ValueTuple{System.Boolean,System.Collections.Generic.IEnumerable{System.String}}},``0@,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetBackingField">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetBackingField</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="propertyName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>propertyName</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BionicCode.Utilities.Net.Standard.ViewModel.ViewModel.TrySetValueSilent``1(``0,``0@,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
  </members>
</doc>